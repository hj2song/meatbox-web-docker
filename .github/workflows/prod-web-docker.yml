name: Deploy of Meatbox-web docker image

on:
  workflow_dispatch:
    inputs:
      runDeploy:
        type: string
        required: true
      IMAGE_TAG:
        type: string
        required: false
 
run-name: ${{ github.event.inputs.IMAGE_TAG }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:                # Job-level permissions configuration starts here
      contents: write           # 'write' access to repository contents  

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        path: docker

    - name: Checkout other repository
      uses: actions/checkout@v3
      with:
        repository: meatbox-git/meatbox-web
        path: web
        token: ${{ secrets.ACCESS_TOKEN }}
        ref: '${{ github.event.inputs.IMAGE_TAG }}'
    
    # nexus Login
    - name: Login to Nexus Docker Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.NEXUS_REGISTRY }}
        username: ${{ secrets.NEXUS_USERNAME }}
        password: ${{ secrets.NEXUS_PASSWORD }}
    
    # 이미지 태그 값 생성    
    - name: Get Docker Image Tag
      run: |
        TAG=${{ github.event.inputs.IMAGE_TAG }}
        IMAGE_TAG=${TAG//\//_}  # 슬래시를 언더스코어로 대체
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV  # 환경 변수로 설정
        echo "Image Tag is ${{ env.IMAGE_TAG }}"
    
    # 슬랙 알림 비 활성화
    - name: slack alert off
      run : cp -r ${{ secrets.DOCKER_PATH }}/deploy/MeatboxApplicationRunner.java ${{ secrets.WEB_PATH }}/java/kr/gbnet/common/listener/MeatboxApplicationRunner.java
        
    # 라이브러리 버전 교체
    - name: library change
      run: |
        cp -rp ${{ secrets.DOCKER_PATH }}/lib/icu4j-50.1.1.jar ${{ secrets.WEB_PATH }}/webapp/WEB-INF/lib/icu4j-50.1.1.jar
        rm -rf ${{ secrets.WEB_PATH }}/webapp/WEB-INF/lib/icu4j-4.0.1.jar
        rm -rf ${{ secrets.WEB_PATH }}/src/main/webapp/img

    # Docker Build에 필요한 파일을 DEPLOY 경로로 이동
    - name: move deploy file
      run: |
        cp -rp ${{ secrets.DOCKER_PATH }}/deploy/tomcat web/tomcat
        cp -rp ${{ secrets.DOCKER_PATH }}/deploy/build-minify.xml web/build-minify.xml
        cp -rp ${{ secrets.DOCKER_PATH }}/deploy/build.xml web/build.xml
        cp -rp ${{ secrets.DOCKER_PATH }}/deploy/Dockerfile-web web/Dockerfile-web
        cp -rp ${{ secrets.DOCKER_PATH }}/deploy/.dockerignore web/.dockerignore
        sed -i 's|\${sys:catalina.home}/logs|\${sys:catalina.home}/logs/\${sys:HOSTNAME}|g' web/src/main/resources/log4j/log4j-web\(RELEASE\).xml
        # find ${DEPLOY_PATH} -type f -exec sed -i 's/www\.meatbox\.co\.kr/www5\.meatbox\.co\.kr/g' {} +

    #  swarmpit 사용을 위한 의도적으로 파일 추가하여 docker image layer 변경점 추가
    - name: container layer change
      run: |
        echo "배포날짜: $(TZ='Asia/Seoul' date +"%Y-%m-%d %H:%M:%S.%3N")" > ${{ secrets.WEB_PATH }}/resources/properties/deploy-date.txt

    # Minify 실행
    - name: Run Minify
      run: ant -f web/build-minify.xml minify

    # Ant 빌드
    - name: ant build
      run: ant -f web/build.xml dist

    # WEB 앱 이미지 빌드
    - name: app image build
      run: docker build -t ${{ secrets.NEXUS_REGISTRY }}/prod/meatbox/web:${{ env.IMAGE_TAG }} -f web/Dockerfile-web .

    # Image Push
    - name: Image Push
      run: |
        docker tag ${{ secrets.NEXUS_REGISTRY }}/prod/meatbox/web:${{ env.IMAGE_TAG }} ${{ secrets.NEXUS_REGISTRY }}/prod/meatbox/web:latest
        docker push ${{ secrets.NEXUS_REGISTRY }}/prod/meatbox/web:${{ env.IMAGE_TAG }}
        docker push ${{ secrets.NEXUS_REGISTRY }}/prod/meatbox/web:latest


# NEXUS_PASSWORD=
# NEXUS_REGISTRY=nexus.meatbox.co.kr:5001
# NEXUS_USERNAME=admin
# DOCKER_PATH=docker/web
# WEB_PATH=web/src/main
